version: '3.8'

volumes:
  postgres_data:
  elasticsearch-data:

networks:
  monitoring-network:
    driver: bridge
  yoga-network:
    external: true


services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"
        tag: "yoga.postgres.backend"

  auth_backend:
    build:
      context: ./auth/backend
    container_name: auth_backend
    ports:
      - "${AUTH_BACKEND_PORT}:8000"
    volumes:
      - ./auth/backend/app:/app
      - ./utils:/app/utils
      - ./:/workspace
    environment:
      - DATABASE_URL=${AUTH_BACKEND_DB_URL}
      - PYTHONPATH=${PYTHONPATH}:/workspace
    env_file:
      - .env
    depends_on:
       - postgres
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"
        tag: "yoga.auth.backend"

  auth_frontend:
    build: 
      context: ./auth/frontend
    container_name: auth_frontend
    ports:
      - "${AUTH_FRONTEND_PORT}:3000"
    env_file:
      - .env
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"
        tag: "yoga.auth.frontend"

  application_backend:
    build: 
      context: ./application/backend
    container_name: application_backend
    ports:
      - "${BACKEND_PORT}:8000"
    environment:
      DATABASE_URL: ${DB_URL}
      PYTHONPATH: ${PYTHONPATH}:/workspace
    env_file:
      - .env
    volumes:
      - ./application/backend:/app
      - ./utils:/app/utils
      - ./tests:/app/tests
      - ./:/workspace
    depends_on:
       - postgres
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"
        tag: "yoga.application.backend"

  application_frontend:
    build: 
      context: ./application/frontend
    container_name: application_frontend
    ports:
      - "${FRONTEND_PORT}:3000"
    env_file:
      - .env
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"
        tag: "yoga.application.frontend"

  admin_backend:
    build: 
      context: ./admin/backend
    container_name: admin_backend
    ports:
      - "${ADMIN_BACKEND_PORT}:5000"
    environment:
      DATABASE_URL: ${DB_URL}
      PYTHONPATH: ${PYTHONPATH}:/workspace
    env_file:
      - .env
    volumes:
      - ./admin/backend:/app
      - ./utils:/app/utils
      - ./tests:/app/tests
      - ./:/workspace
    depends_on:
       - postgres
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"
        tag: "yoga.admin.backend"

  admin_frontend:
    build: 
      context: ./admin/frontend
    container_name: admin_frontend
    ports:
      - "${ADMIN_FRONTEND_PORT}:3000"
    env_file:
      - .env
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"
        tag: "yoga.admin.frontend"

  nginx:
    build:
      context: ./nginx
    container_name: nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - './nginx/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf'
    depends_on:
      - auth_backend
      - application_backend
      - admin_backend
    env_file:
      - .env
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "localhost:24224"
        tag: "yoga.nginx"

  elasticsearch:
    image: elasticsearch:7.17.9
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    restart: unless-stopped
    networks:
      - monitoring-network
      - yoga-network
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cat/health"]
      interval: 10s
      timeout: 5s
      retries: 10

  kibana:
    image: kibana:7.17.9
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - monitoring-network
      - yoga-network

  fluentd:
    build:
      context: ./fluentd
      dockerfile: Dockerfile
    container_name: fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - monitoring-network
      - yoga-network

